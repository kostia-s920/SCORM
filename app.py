import streamlit as st
import os
import tempfile
import time
import base64
import shutil
import zipfile
import subprocess
from pathlib import Path
import sys

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(
    page_title="SCORM –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä",
    page_icon="üìö",
    layout="wide"
)


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
def get_binary_file_downloader_html(bin_file, file_label='–§–∞–π–ª'):
    with open(bin_file, 'rb') as f:
        data = f.read()
    b64 = base64.b64encode(data).decode()
    href = f'<a href="data:application/octet-stream;base64,{b64}" download="{os.path.basename(bin_file)}" class="download-link">{file_label}</a>'
    return href


# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤
def check_scripts():
    scripts = {
        "pdf_converter.py": "—Å–∫—Ä–∏–ø—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó PDF",
        "html_converter.py": "—Å–∫—Ä–∏–ø—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó HTML",
    }

    missing_scripts = []
    for script, description in scripts.items():
        if not os.path.exists(script):
            missing_scripts.append(f"{description} ({script})")

    if missing_scripts:
        st.error(f"–í—ñ–¥—Å—É—Ç–Ω—ñ –≤–∞–∂–ª–∏–≤—ñ —Ñ–∞–π–ª–∏: {', '.join(missing_scripts)}")
        st.info("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ —Ñ–∞–π–ª–∏ –≤ –æ–¥–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –∑ app.py")
        return False
    return True


# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
def check_dependencies():
    try:
        import fitz  # PyMuPDF
        from bs4 import BeautifulSoup
        return True
    except ImportError as e:
        st.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏: {str(e)}")
        st.info("–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é: pip install -r requirements.txt")
        return False


# –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ PDF –≤ SCORM —á–µ—Ä–µ–∑ –ø—ñ–¥–ø—Ä–æ—Ü–µ—Å
def convert_pdf_to_scorm_subprocess(input_path, output_path, title=None, scorm_version="2004", extract_images=True):
    cmd = [sys.executable, "pdf_converter.py", input_path, "--output", output_path]

    if title:
        cmd.extend(["--title", title])

    cmd.extend(["--scorm-version", scorm_version])

    if not extract_images:
        cmd.append("--no-images")

    try:
        process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        stdout, stderr = process.communicate()

        if process.returncode != 0:
            st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ pdf_converter.py: {stderr}")
            return False

        return os.path.exists(output_path)
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –ø—ñ–¥–ø—Ä–æ—Ü–µ—Å—É: {str(e)}")
        return False


# –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ HTML –≤ SCORM —á–µ—Ä–µ–∑ –ø—ñ–¥–ø—Ä–æ—Ü–µ—Å
def convert_html_to_scorm_subprocess(input_path, output_path, title=None, scorm_version="2004", include_resources=True):
    cmd = [sys.executable, "html_converter.py", input_path, "--output", output_path]

    if title:
        cmd.extend(["--title", title])

    cmd.extend(["--scorm-version", scorm_version])

    try:
        process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        stdout, stderr = process.communicate()

        if process.returncode != 0:
            st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ html_converter.py: {stderr}")
            return False

        return os.path.exists(output_path)
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –ø—ñ–¥–ø—Ä–æ—Ü–µ—Å—É: {str(e)}")
        return False


# –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
def main():
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ –æ–ø–∏—Å
    st.title("SCORM –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä")
    st.markdown("""
    –¶–µ–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–æ–∑–≤–æ–ª—è—î –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ PDF —ñ HTML —Ñ–∞–π–ª–∏ –≤ SCORM-–ø–∞–∫–µ—Ç–∏ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ LMS.
    """)

    # –í–∏–±—ñ—Ä —Ç–∏–ø—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
    conversion_type = st.radio(
        "–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó:",
        ("PDF –≤ SCORM", "HTML –≤ SCORM")
    )

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
    with st.expander("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SCORM", expanded=True):
        col1, col2 = st.columns(2)
        with col1:
            scorm_version = st.selectbox(
                "–í–µ—Ä—Å—ñ—è SCORM:",
                ("2004", "1.2"),
                index=0
            )
        with col2:
            title = st.text_input("–ù–∞–∑–≤–∞ –∫—É—Ä—Å—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ):", "")

        if conversion_type == "PDF –≤ SCORM":
            extract_images = st.checkbox("–í–∏–¥–æ–±—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ PDF", value=True)
        else:
            include_resources = st.checkbox("–í–∫–ª—é—á–∞—Ç–∏ –∑–æ–≤–Ω—ñ—à–Ω—ñ —Ä–µ—Å—É—Ä—Å–∏", value=True)

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
    uploaded_file = st.file_uploader(
        f"–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ {'PDF' if conversion_type == 'PDF –≤ SCORM' else 'HTML'} —Ñ–∞–π–ª",
        type=['pdf'] if conversion_type == "PDF –≤ SCORM" else ['html', 'htm']
    )

    if uploaded_file is not None:
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–∞–º–∏
        with tempfile.TemporaryDirectory() as temp_dir:
            # –®–ª—è—Ö –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É
            file_path = os.path.join(temp_dir, uploaded_file.name)

            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π —Ñ–∞–π–ª
            with open(file_path, "wb") as f:
                f.write(uploaded_file.getbuffer())

            st.success(f"–§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {uploaded_file.name}")

            # –®–ª—è—Ö –¥–æ –≤–∏—Ö—ñ–¥–Ω–æ–≥–æ SCORM-–ø–∞–∫–µ—Ç—É
            output_filename = f"{os.path.splitext(uploaded_file.name)[0]}_scorm.zip"
            output_path = os.path.join(temp_dir, output_filename)

            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
            if st.button("–ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤ SCORM"):
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç—ñ–≤
                if not check_scripts():
                    return

                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
                if not check_dependencies():
                    return

                # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä
                progress_bar = st.progress(0)
                status_text = st.empty()

                status_text.text("–ü–æ—á–∞—Ç–æ–∫ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó...")
                progress_bar.progress(10)

                try:
                    # –í–∏–∫–æ–Ω—É—î–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É
                    if conversion_type == "PDF –≤ SCORM":
                        status_text.text("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è PDF –≤ SCORM...")
                        progress_bar.progress(30)

                        # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó PDF –≤ SCORM —á–µ—Ä–µ–∑ –ø—ñ–¥–ø—Ä–æ—Ü–µ—Å
                        result = convert_pdf_to_scorm_subprocess(
                            file_path,
                            output_path,
                            title,
                            scorm_version,
                            extract_images
                        )

                        progress_bar.progress(90)

                    else:  # HTML –≤ SCORM
                        status_text.text("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è HTML –≤ SCORM...")
                        progress_bar.progress(30)

                        # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó HTML –≤ SCORM —á–µ—Ä–µ–∑ –ø—ñ–¥–ø—Ä–æ—Ü–µ—Å
                        result = convert_html_to_scorm_subprocess(
                            file_path,
                            output_path,
                            title,
                            scorm_version,
                            include_resources
                        )

                        progress_bar.progress(90)

                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
                    if result and os.path.exists(output_path):
                        progress_bar.progress(100)
                        status_text.text("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

                        # –ö–æ–ø—ñ—é—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª —É –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
                        temp_output = os.path.join(os.getcwd(), "temp_" + output_filename)
                        shutil.copy2(output_path, temp_output)

                        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                        st.markdown(
                            get_binary_file_downloader_html(temp_output,
                                                            f"–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ SCORM-–ø–∞–∫–µ—Ç ({output_filename})"),
                            unsafe_allow_html=True
                        )

                        # –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
                        st.info(f"""
                        üìö **SCORM-–ø–∞–∫–µ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ!**

                        –î–µ—Ç–∞–ª—ñ:
                        - –ù–∞–∑–≤–∞: {title if title else os.path.splitext(uploaded_file.name)[0]}
                        - –í–µ—Ä—Å—ñ—è SCORM: {scorm_version}
                        - –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: {round(os.path.getsize(output_path) / (1024 * 1024), 2)} –ú–ë

                        –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ SCORM-–ø–∞–∫–µ—Ç —ñ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –π–æ–≥–æ –≤ —Å–≤–æ—é LMS.
                        """)

                    else:
                        progress_bar.progress(100)
                        st.error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤—Ö—ñ–¥–Ω–∏–π —Ñ–∞–π–ª —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")

                except Exception as e:
                    progress_bar.progress(100)
                    st.error(f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {str(e)}")
                    st.exception(e)

    # –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
    st.markdown("---")
    st.markdown("""
    ### –Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ SCORM –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä:

    1. **–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞**:
       - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑ –¥–æ–¥–∞—Ç–∫–æ–º –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è —Ñ–∞–π–ª–∏ `pdf_converter.py` —Ç–∞ `html_converter.py`
       - –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑ `requirements.txt`

    2. **–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è PDF**:
       - –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ PDF —Ñ–∞–π–ª
       - –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –∫—É—Ä—Å—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
       - –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –≤–µ—Ä—Å—ñ—é SCORM —Ç–∞ —ñ–Ω—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
       - –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤ SCORM"

    3. **–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è HTML**:
       - –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ HTML —Ñ–∞–π–ª
       - –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –∫—É—Ä—Å—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) 
       - –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –≤–µ—Ä—Å—ñ—é SCORM —Ç–∞ –≤–∫–ª—é—á–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
       - –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤ SCORM"

    4. **–Ü–º–ø–æ—Ä—Ç –≤ LMS**:
       - –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π SCORM-–ø–∞–∫–µ—Ç
       - –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –π–æ–≥–æ —É –≤–∞—à—É LMS (Moodle, Canvas, Blackboard —Ç–æ—â–æ)
    """)

    # –°—Ç–∏–ª—ñ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    st.markdown("""
    <style>
        .download-link {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 10px 2px;
            cursor: pointer;
            border-radius: 5px;
        }
        .download-link:hover {
            background-color: #45a049;
        }
    </style>
    """, unsafe_allow_html=True)


if __name__ == "__main__":
    main()